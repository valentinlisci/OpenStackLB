---
- name: Create L4 TCP Load Balancer using openstack.cloud 2.4.1 (no CLI)
  hosts: localhost
  gather_facts: no
  collections:
    - openstack.cloud

  vars:
    cloud_name: openstack
    lb_name: awx-test-lb-l4-corretto
    lb_vip_subnet: "d126b00a-8fab-48b4-bc55-0f05c6aacc8e" 
    listener_name: tcp-listener
    listener_port: 8080
    pool_name: tcp-pool
    lb_algorithm: ROUND_ROBIN
    lb_members:
      - address: 10.0.0.11
        protocol_port: 8080
      - address: 10.0.0.12
        protocol_port: 8080

  tasks:
    - name: Ensure no existing load balancer (cleanup)
      openstack.cloud.loadbalancer:
        cloud: "{{ cloud_name }}"
        name: "{{ lb_name }}"
        state: absent
      ignore_errors: yes

    - name: Create Load Balancer (Amphora provider assumed)
      openstack.cloud.loadbalancer:
        cloud: "{{ cloud_name }}"
        name: "{{ lb_name }}"
        vip_subnet: "{{ lb_vip_subnet }}"
        state: present
        wait: yes
        timeout: 800

    - name: Create TCP Listener
      openstack.cloud.lb_listener:
        cloud: "{{ cloud_name }}"
        load_balancer: "{{ lb_name }}"
        name: "{{ listener_name }}"
        protocol: TCP
        protocol_port: "{{ listener_port }}"
        state: present
        wait: yes
        timeout: 120

    - name: Create TCP Pool
      openstack.cloud.lb_pool:
        cloud: "{{ cloud_name }}"
        listener: "{{ listener_name }}"
        name: "{{ pool_name }}"
        protocol: TCP
        lb_algorithm: "{{ lb_algorithm }}"
        state: present
        wait: yes
        timeout: 120

    - name: Add members to pool
      openstack.cloud.lb_member:
        cloud: "{{ cloud_name }}"
        pool: "{{ pool_name }}"
        name: "member-{{ item.address }}-{{ item.protocol_port }}"
        address: "{{ item.address }}"
        protocol_port: "{{ item.protocol_port }}"
        subnet_id: "{{ lb_vip_subnet }}"
        state: present
      loop: "{{ lb_members }}"

    - name: Show success message
      ansible.builtin.debug:
        msg: |
          ✅ L4 Load Balancer creato con successo!
          Nome: {{ lb_name }}
          Porta: {{ listener_port }}
          Membri: {{ lb_members | map(attribute='address') | list }}

    - name: Get Load Balancer VIP port ID via CLI
      ansible.builtin.command: >
        openstack --os-cloud {{ cloud_name }}
        loadbalancer show {{ lb_name }}
        -f value -c vip_port_id
      register: lb_vip_port_id

    - name: Get Load Balancer VIP address via CLI
      ansible.builtin.command: >
        openstack --os-cloud {{ cloud_name }}
        loadbalancer show {{ lb_name }}
        -f value -c vip_address
      register: lb_vip_address

    - name: Allocate Floating IP via CLI
      ansible.builtin.command: >
        openstack --os-cloud {{ cloud_name }}
        floating ip create external_pub_vlan20
        -f value -c id
      register: fip_id

    - name: Associate Floating IP to Load Balancer VIP port via CLI
      ansible.builtin.command: >
        openstack --os-cloud {{ cloud_name }}
        floating ip set --port {{ lb_vip_port_id.stdout }}
        {{ fip_id.stdout }}

    - name: Get public Floating IP address
      ansible.builtin.command: >
        openstack --os-cloud {{ cloud_name }}
        floating ip show {{ fip_id.stdout }}
        -f value -c floating_ip_address
      register: fip_public_ip

    - name: Display final summary
      ansible.builtin.debug:
        msg: |
          ✅ Load Balancer creato e pubblicato con successo!
          Nome: {{ lb_name }}
          VIP interno: {{ lb_vip_address.stdout }}
          Floating IP pubblico: {{ fip_public_ip.stdout }}
