---
- name: Create L4 TCP Load Balancer using openstack.cloud 2.4.1 (no CLI)
  hosts: localhost
  gather_facts: no
  collections:
    - openstack.cloud
    - community.general

  vars:
    cloud_name: openstack
    lb_name: awx-test-lb-l4-corretto
    lb_vip_subnet: "d126b00a-8fab-48b4-bc55-0f05c6aacc8e"
    listener_name: tcp-listener
    listener_port: 8080
    pool_name: tcp-pool
    lb_algorithm: ROUND_ROBIN
    lb_members:
      - address: 10.0.0.11
        protocol_port: 8080
      - address: 10.0.0.12
        protocol_port: 8080

  tasks:

    - name: Ottieni nome del tenant effettivo da clouds.yml (metodo Python)
      ansible.builtin.command: >
        python3 -c "import yaml, sys;
        data = yaml.safe_load(open('/etc/openstack/clouds.yml'));
        print(data['clouds']['{{ cloud_name }}']['auth']['project_name'])"
      register: tenant_name_raw
      changed_when: false

    - set_fact:
        tenant_name: "{{ tenant_name_raw.stdout }}"

    - name: Rimuovi eventuale Load Balancer esistente (cleanup)
      openstack.cloud.loadbalancer:
        cloud: "{{ cloud_name }}"
        name: "{{ full_lb_name }}"
        state: absent
      ignore_errors: yes

    - name: Crea Load Balancer (Amphora provider assumed)
      openstack.cloud.loadbalancer:
        cloud: "{{ cloud_name }}"
        name: "{{ full_lb_name }}"
        vip_subnet: "{{ lb_vip_subnet }}"
        description: "Created by AWX for tenant {{ tenant_name }}"
        state: present
        wait: yes
        timeout: 800

    - name: Crea TCP Listener
      openstack.cloud.lb_listener:
        cloud: "{{ cloud_name }}"
        load_balancer: "{{ full_lb_name }}"
        name: "{{ listener_name }}"
        protocol: TCP
        protocol_port: "{{ listener_port }}"
        state: present
        wait: yes
        timeout: 120

    - name: Crea TCP Pool
      openstack.cloud.lb_pool:
        cloud: "{{ cloud_name }}"
        listener: "{{ listener_name }}"
        name: "{{ pool_name }}"
        protocol: TCP
        lb_algorithm: "{{ lb_algorithm }}"
        state: present
        wait: yes
        timeout: 120

    - name: Aggiungi membri al Pool
      openstack.cloud.lb_member:
        cloud: "{{ cloud_name }}"
        pool: "{{ pool_name }}"
        name: "member-{{ item.address }}-{{ item.protocol_port }}"
        address: "{{ item.address }}"
        protocol_port: "{{ item.protocol_port }}"
        subnet_id: "{{ lb_vip_subnet }}"
        state: present
      loop: "{{ lb_members }}"

    - name: Recupera informazioni del Load Balancer con OpenStack SDK
      ansible.builtin.command: >
        python3 -c "import openstack, json;
        conn=openstack.connect(cloud='{{ cloud_name }}');
        lb=conn.load_balancer.find_load_balancer('{{ full_lb_name }}');
        import sys;
        sys.exit(1) if not lb else None;
        full=conn.load_balancer.get_load_balancer(lb);
        print(json.dumps({'name': full.name, 'vip_address': full.vip_address, 'vip_port_id': full.vip_port_id, 'id': full.id}))"
      register: lb_info_json
      changed_when: false
      failed_when: lb_info_json.rc != 0

    - name: Analizza output SDK
      ansible.builtin.set_fact:
        lb_data: "{{ lb_info_json.stdout | from_json }}"

    - name: Imposta output per Workflow
      ansible.builtin.set_fact:
        lb_output:
          name: "{{ lb_data.name }}"
          vip_port_id: "{{ lb_data.vip_port_id }}"
          vip_address: "{{ lb_data.vip_address }}"
          id: "{{ lb_data.id }}"

    - name: Mostra riepilogo del Load Balancer
      ansible.builtin.debug:
        msg:
          - "âœ… Load Balancer creato con successo!"
          - "Tenant: {{ tenant_name }}"
          - "Nome: {{ lb_output.name }}"
          - "VIP Address: {{ lb_output.vip_address }}"
          - "VIP Port ID: {{ lb_output.vip_port_id }}"
